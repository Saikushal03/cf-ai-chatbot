{
  "version": 3,
  "sources": ["../../node_modules/agents/src/ai-types.ts", "../../node_modules/agents/dist/chunk-PR4QN5HX.js"],
  "sourcesContent": ["import type { UIMessage } from \"ai\";\n\n/**\n * Enum for message types to improve type safety and maintainability\n */\nexport enum MessageType {\n  CF_AGENT_CHAT_MESSAGES = \"cf_agent_chat_messages\",\n  CF_AGENT_USE_CHAT_REQUEST = \"cf_agent_use_chat_request\",\n  CF_AGENT_USE_CHAT_RESPONSE = \"cf_agent_use_chat_response\",\n  CF_AGENT_CHAT_CLEAR = \"cf_agent_chat_clear\",\n  CF_AGENT_CHAT_REQUEST_CANCEL = \"cf_agent_chat_request_cancel\",\n\n  CF_AGENT_MCP_SERVERS = \"cf_agent_mcp_servers\",\n  CF_MCP_AGENT_EVENT = \"cf_mcp_agent_event\",\n  CF_AGENT_STATE = \"cf_agent_state\",\n  RPC = \"rpc\"\n}\n\n/**\n * Types of messages sent from the Agent to clients\n */\nexport type OutgoingMessage<ChatMessage extends UIMessage = UIMessage> =\n  | {\n      /** Indicates this message is a command to clear chat history */\n      type: MessageType.CF_AGENT_CHAT_CLEAR;\n    }\n  | {\n      /** Indicates this message contains updated chat messages */\n      type: MessageType.CF_AGENT_CHAT_MESSAGES;\n      /** Array of chat messages */\n      messages: ChatMessage[];\n    }\n  | {\n      /** Indicates this message is a response to a chat request */\n      type: MessageType.CF_AGENT_USE_CHAT_RESPONSE;\n      /** Unique ID of the request this response corresponds to */\n      id: string;\n      /** Content body of the response */\n      body: string;\n      /** Whether this is the final chunk of the response */\n      done: boolean;\n      /** Whether this response contains an error */\n      error?: boolean;\n    }\n  | {\n      /** Indicates this message is a command to clear chat history */\n      type: MessageType.CF_AGENT_CHAT_CLEAR;\n    };\n\n/**\n * Types of messages sent from clients to the Agent\n */\nexport type IncomingMessage<ChatMessage extends UIMessage = UIMessage> =\n  | {\n      /** Indicates this message is a command to clear chat history */\n      type: MessageType.CF_AGENT_CHAT_CLEAR;\n    }\n  | {\n      /** Indicates this message is a request to the chat API */\n      type: MessageType.CF_AGENT_USE_CHAT_REQUEST;\n      /** Unique ID for this request */\n      id: string;\n      /** Request initialization options */\n      init: Pick<\n        RequestInit,\n        | \"method\"\n        | \"keepalive\"\n        | \"headers\"\n        | \"body\"\n        | \"redirect\"\n        | \"integrity\"\n        | \"credentials\"\n        | \"mode\"\n        | \"referrer\"\n        | \"referrerPolicy\"\n        | \"window\"\n      >;\n    }\n  | {\n      /** Indicates this message is a command to clear chat history */\n      type: MessageType.CF_AGENT_CHAT_CLEAR;\n    }\n  | {\n      /** Indicates this message contains updated chat messages */\n      type: MessageType.CF_AGENT_CHAT_MESSAGES;\n      /** Array of chat messages */\n      messages: ChatMessage[];\n    }\n  | {\n      /** Indicates the user wants to stop generation of this message */\n      type: MessageType.CF_AGENT_CHAT_REQUEST_CANCEL;\n      id: string;\n    };\n", "var __create = Object.create;\nvar __defProp = Object.defineProperty;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __getOwnPropNames = Object.getOwnPropertyNames;\nvar __getProtoOf = Object.getPrototypeOf;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __require = /* @__PURE__ */ ((x) => typeof require !== \"undefined\" ? require : typeof Proxy !== \"undefined\" ? new Proxy(x, {\n  get: (a, b) => (typeof require !== \"undefined\" ? require : a)[b]\n}) : x)(function(x) {\n  if (typeof require !== \"undefined\") return require.apply(this, arguments);\n  throw Error('Dynamic require of \"' + x + '\" is not supported');\n});\nvar __commonJS = (cb, mod) => function __require2() {\n  return mod || (0, cb[__getOwnPropNames(cb)[0]])((mod = { exports: {} }).exports, mod), mod.exports;\n};\nvar __export = (target, all) => {\n  for (var name in all)\n    __defProp(target, name, { get: all[name], enumerable: true });\n};\nvar __copyProps = (to, from, except, desc) => {\n  if (from && typeof from === \"object\" || typeof from === \"function\") {\n    for (let key of __getOwnPropNames(from))\n      if (!__hasOwnProp.call(to, key) && key !== except)\n        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });\n  }\n  return to;\n};\nvar __toESM = (mod, isNodeMode, target) => (target = mod != null ? __create(__getProtoOf(mod)) : {}, __copyProps(\n  // If the importer is in node compatibility mode or this is not an ESM\n  // file that has been converted to a CommonJS file using a Babel-\n  // compatible transform (i.e. \"__esModule\" has not been set), then set\n  // \"default\" to the CommonJS \"module.exports\" for node compatibility.\n  isNodeMode || !mod || !mod.__esModule ? __defProp(target, \"default\", { value: mod, enumerable: true }) : target,\n  mod\n));\n\nexport {\n  __require,\n  __commonJS,\n  __export,\n  __toESM\n};\n//# sourceMappingURL=chunk-PR4QN5HX.js.map"],
  "mappings": ";;;;;AAKO,IAAK,eAAL,CAAKA,iBAAL;AACLA,eAAA,wBAAA,IAAyB;AACzBA,eAAA,2BAAA,IAA4B;AAC5BA,eAAA,4BAAA,IAA6B;AAC7BA,eAAA,qBAAA,IAAsB;AACtBA,eAAA,8BAAA,IAA+B;AAE/BA,eAAA,sBAAA,IAAuB;AACvBA,eAAA,oBAAA,IAAqB;AACrBA,eAAA,gBAAA,IAAiB;AACjBA,eAAA,KAAA,IAAM;AAVI,SAAAA;AAAA,GAAA,eAAA,CAAA,CAAA;;;ACCZ,IAAIC,cAA6B,CAAC,MAAM,OAAO,cAAY,cAAc,YAAU,OAAO,UAAU,cAAc,IAAI,MAAM,GAAG;AAAA,EAC7H,KAAK,CAAC,GAAG,OAAO,OAAO,cAAY,cAAc,YAAU,GAAG,CAAC;AACjE,CAAC,IAAI,GAAG,SAAS,GAAG;AAClB,MAAI,OAAO,cAAY,YAAa,QAAO,UAAQ,MAAM,MAAM,SAAS;AACxE,QAAM,MAAM,yBAAyB,IAAI,oBAAoB;AAC/D,CAAC;",
  "names": ["MessageType", "__require"]
}
